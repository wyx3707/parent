<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.repository.mapper.SvcServiceItemPOMapper">
  <resultMap id="BaseResultMap" type="com.hy.repository.po.SvcServiceItemPO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="service_item_id" jdbcType="INTEGER" property="serviceItemId" />
    <result column="service_class_id" jdbcType="INTEGER" property="serviceClassId" />
    <result column="big_class_id" jdbcType="INTEGER" property="bigClassId" />
    <result column="service_item_name" jdbcType="VARCHAR" property="serviceItemName" />
    <result column="base_data_version" jdbcType="INTEGER" property="baseDataVersion" />
    <result column="quality_guarantee" jdbcType="INTEGER" property="qualityGuarantee" />
    <result column="charge_unit" jdbcType="VARCHAR" property="chargeUnit" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="INTEGER" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="off_flag" jdbcType="TINYINT" property="offFlag" />
    <result column="ismall_flag" jdbcType="TINYINT" property="ismallFlag" />
    <result column="screate_time" jdbcType="TIMESTAMP" property="screateTime" />
    <result column="supdate_time" jdbcType="TIMESTAMP" property="supdateTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="need_photo_flag" jdbcType="TINYINT" property="needPhotoFlag" />
    <result column="need_reason_result_flag" jdbcType="TINYINT" property="needReasonResultFlag" />
    <result column="order_max_item_num" jdbcType="INTEGER" property="orderMaxItemNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    service_item_id, service_class_id, big_class_id, service_item_name, base_data_version, 
    quality_guarantee, charge_unit, create_user, create_time, update_user, update_time, 
    off_flag, ismall_flag, screate_time, supdate_time, del_flag, need_photo_flag, need_reason_result_flag, 
    order_max_item_num
  </sql>
  <select id="selectByExample" parameterType="com.hy.repository.po.SvcServiceItemPOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from svc_service_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from svc_service_item
    where service_item_id = #{serviceItemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from svc_service_item
    where service_item_id = #{serviceItemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hy.repository.po.SvcServiceItemPOExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from svc_service_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="service_item_id" keyProperty="serviceItemId" parameterType="com.hy.repository.po.SvcServiceItemPO" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into svc_service_item (service_class_id, big_class_id, service_item_name, 
      base_data_version, quality_guarantee, charge_unit, 
      create_user, create_time, update_user, 
      update_time, off_flag, ismall_flag, 
      screate_time, supdate_time, del_flag, 
      need_photo_flag, need_reason_result_flag, order_max_item_num
      )
    values (#{serviceClassId,jdbcType=INTEGER}, #{bigClassId,jdbcType=INTEGER}, #{serviceItemName,jdbcType=VARCHAR}, 
      #{baseDataVersion,jdbcType=INTEGER}, #{qualityGuarantee,jdbcType=INTEGER}, #{chargeUnit,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{offFlag,jdbcType=TINYINT}, #{ismallFlag,jdbcType=TINYINT}, 
      #{screateTime,jdbcType=TIMESTAMP}, #{supdateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}, 
      #{needPhotoFlag,jdbcType=TINYINT}, #{needReasonResultFlag,jdbcType=TINYINT}, #{orderMaxItemNum,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="service_item_id" keyProperty="serviceItemId" parameterType="com.hy.repository.po.SvcServiceItemPO" useGeneratedKeys="true">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into svc_service_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceClassId != null">
        service_class_id,
      </if>
      <if test="bigClassId != null">
        big_class_id,
      </if>
      <if test="serviceItemName != null">
        service_item_name,
      </if>
      <if test="baseDataVersion != null">
        base_data_version,
      </if>
      <if test="qualityGuarantee != null">
        quality_guarantee,
      </if>
      <if test="chargeUnit != null">
        charge_unit,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="offFlag != null">
        off_flag,
      </if>
      <if test="ismallFlag != null">
        ismall_flag,
      </if>
      <if test="screateTime != null">
        screate_time,
      </if>
      <if test="supdateTime != null">
        supdate_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="needPhotoFlag != null">
        need_photo_flag,
      </if>
      <if test="needReasonResultFlag != null">
        need_reason_result_flag,
      </if>
      <if test="orderMaxItemNum != null">
        order_max_item_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceClassId != null">
        #{serviceClassId,jdbcType=INTEGER},
      </if>
      <if test="bigClassId != null">
        #{bigClassId,jdbcType=INTEGER},
      </if>
      <if test="serviceItemName != null">
        #{serviceItemName,jdbcType=VARCHAR},
      </if>
      <if test="baseDataVersion != null">
        #{baseDataVersion,jdbcType=INTEGER},
      </if>
      <if test="qualityGuarantee != null">
        #{qualityGuarantee,jdbcType=INTEGER},
      </if>
      <if test="chargeUnit != null">
        #{chargeUnit,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offFlag != null">
        #{offFlag,jdbcType=TINYINT},
      </if>
      <if test="ismallFlag != null">
        #{ismallFlag,jdbcType=TINYINT},
      </if>
      <if test="screateTime != null">
        #{screateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supdateTime != null">
        #{supdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="needPhotoFlag != null">
        #{needPhotoFlag,jdbcType=TINYINT},
      </if>
      <if test="needReasonResultFlag != null">
        #{needReasonResultFlag,jdbcType=TINYINT},
      </if>
      <if test="orderMaxItemNum != null">
        #{orderMaxItemNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hy.repository.po.SvcServiceItemPOExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from svc_service_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update svc_service_item
    <set>
      <if test="record.serviceItemId != null">
        service_item_id = #{record.serviceItemId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceClassId != null">
        service_class_id = #{record.serviceClassId,jdbcType=INTEGER},
      </if>
      <if test="record.bigClassId != null">
        big_class_id = #{record.bigClassId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceItemName != null">
        service_item_name = #{record.serviceItemName,jdbcType=VARCHAR},
      </if>
      <if test="record.baseDataVersion != null">
        base_data_version = #{record.baseDataVersion,jdbcType=INTEGER},
      </if>
      <if test="record.qualityGuarantee != null">
        quality_guarantee = #{record.qualityGuarantee,jdbcType=INTEGER},
      </if>
      <if test="record.chargeUnit != null">
        charge_unit = #{record.chargeUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null">
        update_user = #{record.updateUser,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.offFlag != null">
        off_flag = #{record.offFlag,jdbcType=TINYINT},
      </if>
      <if test="record.ismallFlag != null">
        ismall_flag = #{record.ismallFlag,jdbcType=TINYINT},
      </if>
      <if test="record.screateTime != null">
        screate_time = #{record.screateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supdateTime != null">
        supdate_time = #{record.supdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.needPhotoFlag != null">
        need_photo_flag = #{record.needPhotoFlag,jdbcType=TINYINT},
      </if>
      <if test="record.needReasonResultFlag != null">
        need_reason_result_flag = #{record.needReasonResultFlag,jdbcType=TINYINT},
      </if>
      <if test="record.orderMaxItemNum != null">
        order_max_item_num = #{record.orderMaxItemNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update svc_service_item
    set service_item_id = #{record.serviceItemId,jdbcType=INTEGER},
      service_class_id = #{record.serviceClassId,jdbcType=INTEGER},
      big_class_id = #{record.bigClassId,jdbcType=INTEGER},
      service_item_name = #{record.serviceItemName,jdbcType=VARCHAR},
      base_data_version = #{record.baseDataVersion,jdbcType=INTEGER},
      quality_guarantee = #{record.qualityGuarantee,jdbcType=INTEGER},
      charge_unit = #{record.chargeUnit,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      off_flag = #{record.offFlag,jdbcType=TINYINT},
      ismall_flag = #{record.ismallFlag,jdbcType=TINYINT},
      screate_time = #{record.screateTime,jdbcType=TIMESTAMP},
      supdate_time = #{record.supdateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      need_photo_flag = #{record.needPhotoFlag,jdbcType=TINYINT},
      need_reason_result_flag = #{record.needReasonResultFlag,jdbcType=TINYINT},
      order_max_item_num = #{record.orderMaxItemNum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hy.repository.po.SvcServiceItemPO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update svc_service_item
    <set>
      <if test="serviceClassId != null">
        service_class_id = #{serviceClassId,jdbcType=INTEGER},
      </if>
      <if test="bigClassId != null">
        big_class_id = #{bigClassId,jdbcType=INTEGER},
      </if>
      <if test="serviceItemName != null">
        service_item_name = #{serviceItemName,jdbcType=VARCHAR},
      </if>
      <if test="baseDataVersion != null">
        base_data_version = #{baseDataVersion,jdbcType=INTEGER},
      </if>
      <if test="qualityGuarantee != null">
        quality_guarantee = #{qualityGuarantee,jdbcType=INTEGER},
      </if>
      <if test="chargeUnit != null">
        charge_unit = #{chargeUnit,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="offFlag != null">
        off_flag = #{offFlag,jdbcType=TINYINT},
      </if>
      <if test="ismallFlag != null">
        ismall_flag = #{ismallFlag,jdbcType=TINYINT},
      </if>
      <if test="screateTime != null">
        screate_time = #{screateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="supdateTime != null">
        supdate_time = #{supdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="needPhotoFlag != null">
        need_photo_flag = #{needPhotoFlag,jdbcType=TINYINT},
      </if>
      <if test="needReasonResultFlag != null">
        need_reason_result_flag = #{needReasonResultFlag,jdbcType=TINYINT},
      </if>
      <if test="orderMaxItemNum != null">
        order_max_item_num = #{orderMaxItemNum,jdbcType=INTEGER},
      </if>
    </set>
    where service_item_id = #{serviceItemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hy.repository.po.SvcServiceItemPO">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update svc_service_item
    set service_class_id = #{serviceClassId,jdbcType=INTEGER},
      big_class_id = #{bigClassId,jdbcType=INTEGER},
      service_item_name = #{serviceItemName,jdbcType=VARCHAR},
      base_data_version = #{baseDataVersion,jdbcType=INTEGER},
      quality_guarantee = #{qualityGuarantee,jdbcType=INTEGER},
      charge_unit = #{chargeUnit,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      off_flag = #{offFlag,jdbcType=TINYINT},
      ismall_flag = #{ismallFlag,jdbcType=TINYINT},
      screate_time = #{screateTime,jdbcType=TIMESTAMP},
      supdate_time = #{supdateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT},
      need_photo_flag = #{needPhotoFlag,jdbcType=TINYINT},
      need_reason_result_flag = #{needReasonResultFlag,jdbcType=TINYINT},
      order_max_item_num = #{orderMaxItemNum,jdbcType=INTEGER}
    where service_item_id = #{serviceItemId,jdbcType=INTEGER}
  </update>
</mapper>